name: CI with JFrog

on:
  push:
    branches:
      - main
      - develop
  pull_request:
    branches: [ "main" ]

env:
  # Define variables for build name and number for reuse
  BUILD_NAME: spring-petclinic
  # Use run_number for a simple, incrementing build number
  BUILD_NUMBER: ${{ github.run_number }}

jobs:
  build-and-scan:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '17'

      - name: Setup JFrog CLI
        uses: jfrog/setup-jfrog-cli@v4
        env:
          JF_URL: ${{ secrets.JF_URL }}
          JF_USER: ${{ secrets.JF_USER }}
          JF_PASSWORD: ${{ secrets.JF_PASSWORD }}

      - name: Configure Maven Repositories
        run: |
          jf mvnc \
            --repo-resolve-releases jesseh-maven-dev-virtual \
            --repo-resolve-snapshots jesseh-maven-dev-virtual \
            --repo-deploy-releases jesseh-maven-dev-local \
            --repo-deploy-snapshots jesseh-maven-dev-local
          
      - name: Run Maven Build
        run: |
          jf mvn clean install \
            --build-name=${{ env.BUILD_NAME }} \
            --build-number=${{ env.BUILD_NUMBER }}

      - name: Login to JFrog Docker Registry
        uses: docker/login-action@v3
        with:
          registry: ${{ secrets.JF_URL }}
          username: ${{ secrets.JF_USER }}
          password: ${{ secrets.JF_PASSWORD }}

      - name: Build and Push Docker Image
        run: |
          export DOCKER_IMAGE_TAG="${{ secrets.JF_URL }}/jesseh-docker-dev-local/spring-petclinic:${{ env.BUILD_NUMBER }}"
          docker build -t $DOCKER_IMAGE_TAG .
          jf docker push $DOCKER_IMAGE_TAG \
            --build-name=${{ env.BUILD_NAME }} \
            --build-number=${{ env.BUILD_NUMBER }}

      - name: Publish and Scan Build Info
        run: |
          jf rt build-publish ${{ env.BUILD_NAME }} ${{ env.BUILD_NUMBER }}
          jf bs --fail-build=true ${{ env.BUILD_NAME }} ${{ env.BUILD_NUMBER }}