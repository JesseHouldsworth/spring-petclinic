name: CI Pipeline with JFrog Artifactory

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '17'

      - name: Install JFrog CLI
        run: |
          curl -fL https://getcli.jfrog.io | bash
          chmod +x jfrog
          mv jfrog /usr/local/bin/

      - name: Configure JFrog CLI
        run: |
          jfrog config add my-artifactory \
            --artifactory-url=https://trialt0zppb.jfrog.io/artifactory \
            --user=${{ secrets.ARTIFACTORY_USERNAME }} \
            --password=${{ secrets.ARTIFACTORY_IDENTITY_TOKEN }} \
            --interactive=false

      - name: Configure Maven to use JFrog Artifactory
        run: |
          mkdir -p ~/.m2
          echo '<settings>
            <mirrors>
              <mirror>
                <id>jfrog-artifactory</id>
                <mirrorOf>central</mirrorOf>
                <url>https://trialt0zppb.jfrog.io/artifactory/maven-maven-remote/</url>
                <repositoryManager>true</repositoryManager>
              </mirror>
            </mirrors>
            <servers>
              <server>
                <id>jfrog-artifactory</id>
                <username>${{ secrets.ARTIFACTORY_USERNAME }}</username>
                <password>${{ secrets.ARTIFACTORY_IDENTITY_TOKEN }}</password>
              </server>
            </servers>
          </settings>' > ~/.m2/settings.xml

      - name: Compile and Package the Application
        run: |
          mvn clean package -DskipTests

      - name: Publish Maven Artifact to JFrog Artifactory
        run: |
          jfrog rt mvn clean install --build-name=spring-petclinic --build-number=${{ github.run_id }}

      - name: Build Docker Image
        run: |
          docker build -t trialt0zppb.jfrog.io/onboarding-docker-local/spring-petclinic:${{ github.run_id }} .

      - name: Collect Docker Build Info with JFrog CLI
        run: |
          jfrog rt docker-push trialt0zppb.jfrog.io/onboarding-docker-local/spring-petclinic:${{ github.run_id }} onboarding-docker-local \
            --build-name=spring-petclinic \
            --build-number=${{ github.run_id }}

      - name: Publish Build Info to JFrog Artifactory
        run: |
          jfrog rt build-publish spring-petclinic ${{ github.run_id }}
